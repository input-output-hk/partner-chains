export GENESIS_UTXO="0000000000000000000000000000000000000000000000000000000000000000#0"

# unique identifier of the beneficiary that will be credited
# producer rewards for blocks produced by this node
export SIDECHAIN_BLOCK_BENEFICIARY="0x0000000000000000000000000000000000000000000000000000000000000001"

# below exports parse config/addresses.json file, which needs to regenerated for each new sidechain by running
# pc-contracts-cli addresses ... > config/addresses.json
export COMMITTEE_CANDIDATE_ADDRESS=$(jq -r '.addresses.CommitteeCandidateValidator' dev/envs/devnet/addresses.json)
export D_PARAMETER_POLICY_ID=$(jq -r '.mintingPolicies.DParameterPolicy' dev/envs/devnet/addresses.json)
export PERMISSIONED_CANDIDATES_POLICY_ID=$(jq -r '.mintingPolicies.PermissionedCandidatesPolicy' dev/envs/devnet/addresses.json)

# native token observability
export NATIVE_TOKEN_POLICY_ID='ada83ddd029614381f00e28de0922ab0dec6983ea9dd29ae20eef9b4'
export NATIVE_TOKEN_ASSET_NAME='5043546f6b656e44656d6f'
export ILLIQUID_SUPPLY_VALIDATOR_ADDRESS='addr_test1wrhvtvx3f0g9wv9rx8kfqc60jva3e07nqujk2cspekv4mqs9rjdvz'

# Preview parameters
export CARDANO_SECURITY_PARAMETER=432
export CARDANO_ACTIVE_SLOTS_COEFF=0.05
export DB_SYNC_POSTGRES_CONNECTION_STRING="postgres://postgres:password123@localhost/cexplorer"

# A minimum block distance from the most recent MC stable block.
# Used by block producers to select the stable block to include in the block header.
export BLOCK_STABILITY_MARGIN=0

# Timestamp for the MC_FIRST_EPOCH_NUMBER
# Genesis should not have a timestamp before this one, this should be divisible by both sidechain slot and epoch durations
export MC__FIRST_EPOCH_TIMESTAMP_MILLIS=1666656000000
# First Shelley epoch number on Cardano
export MC__FIRST_EPOCH_NUMBER=0
# Should be divisible by Sidechain epoch duration (which is SlotDuration * SlotsPerEpoch and those params can be found in runtime/src/lib.rs)
export MC__EPOCH_DURATION_MILLIS=86400000
# First Shelley slot number on Cardano
export MC__FIRST_SLOT_NUMBER=0

# When true, node will use the mock implementation of main chain follower. Overrides USE_INTERNAL_MAIN_CHAIN_FOLLOWER if true.
export USE_MAIN_CHAIN_FOLLOWER_MOCK=false
export MAIN_CHAIN_FOLLOWER_MOCK_REGISTRATIONS_FILE=res/bb-mock/default-registrations.json
