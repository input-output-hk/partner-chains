use crate::{
	cardano_keys::CardanoPaymentSigningKey,
	governance::{GovernancePolicyScript, PartnerChainsMultisigPolicy},
	plutus_script::PlutusScript,
};
use cardano_serialization_lib::{Address, Language, PlutusData};
use hex_literal::hex;
use ogmios_client::{
	query_ledger_state::{
		PlutusCostModels, ProtocolParametersResponse, ReferenceScriptsCosts, ScriptExecutionPrices,
	},
	types::{NativeScript, OgmiosBytesSize, OgmiosScript, OgmiosTx, OgmiosUtxo, OgmiosValue},
};
use sidechain_domain::StakePoolPublicKey;

pub(crate) fn payment_key() -> CardanoPaymentSigningKey {
	CardanoPaymentSigningKey::from_normal_bytes(hex!(
		"cf86dc85e4933424826e846c18d2695689bf65de1fc0c40fcd9389ba1cbdc069"
	))
	.unwrap()
}

pub(crate) fn test_transaction_bytes() -> Vec<u8> {
	hex::decode("84a900d90102828258202f3991a80bb6b1d8b752205b65485ca31a2d39396fa947e35ab96ad7197a9ad300825820c5be5aedc57d317e1231c676617ba63dcb5e2a701c4b684601fb29b54e530936000182a400581d707eccc25232d07fdc848d7b653465fc6c23a32d8dfb266181ecd26f0f01821a001a0b08a1581cab81fe48f392989bd215f9fdc25ece3335a248696b2a64abc1acb595a14e56657273696f6e206f7261636c6501028201d81858229f1820581cab81fe48f392989bd215f9fdc25ece3335a248696b2a64abc1acb595ff03d81858668200830302838200581ce8c300330fe315531ca89d4a2e7d0c80211bc70b473b1ed4979dff2b8200581c6e1c262a68ef714d9a18363da03c701fab710ffd90a570def786bf828200581c5822eb3fce06f59ad5d73bfc4955bb5e8064bef04f2a1fe8b331137e82581d60e8c300330fe315531ca89d4a2e7d0c80211bc70b473b1ed4979dff2b821a0045b594a1581c947771dda676c116f8d1661994b218e04103aefd791d74e944599b2fa14001021a00047aec09a1581c947771dda676c116f8d1661994b218e04103aefd791d74e944599b2fa140010b58208ea548b46c058ce1f3c7079ee8b31526e7d1735ff6d573418dd623535f938a670dd90102818258202f3991a80bb6b1d8b752205b65485ca31a2d39396fa947e35ab96ad7197a9ad3000ed9010281581c186c94e767a96b5fa1498394f2e577ad6bc71864c30f3ce04b44b67e1082581d60e8c300330fe315531ca89d4a2e7d0c80211bc70b473b1ed4979dff2b1a004592dd111a0006b863a300d9010282825820fc014cb5f071f5d6a36cb5a7e5f168c86555989445a23d4abec33d280f71aca4584077ed6df6ac2cd2d0b43699b676eee53c162d9aa311427fd7c8268c95ecfd243833bbb9696e544e670d863176f384c86201d9627a24f23be085bd889ea5cea30c825820d6bc8977eea31b64634215dcf8f92ce0fd471fbd100881b1e5cb69cec22cf90b58400b8a3f3479362d8c4fe38cac901a12fbc189f6428fd9c24349e09e06fa6650a6b4c4dd70be0736d5d8ece1518fd55dc010551811076e59a435dbf822014a5f0006d901028159084859084501000033233223232323233223232323232323232323232332232322222253353232323235002223232323232323232533553355335325335323302d2253350011502722135002225333573466e3c00801c4c0b00044c01800c0094cd4cc0b0894cd400440b4884c8d400c88d400488894ccd4008401c854cd400884cc0e4894cd4004402c884c94cd400c84d4004894cd4cc0ac009204015333573466e1d200233301e00d0244890e56657273696f6e206f7261636c6500133503f009004100410041001300400132335038001039333333357480044a0644a0644646660526eb0010004894cd54cd4cccccc0a800888014801080108c0dc004801084c0dc004400c84ccc0b0008010894cd4cccccc0b400888020801c801c801c8c0e800484ccc0bc008c0e8cc0c0010004880244018400d40c8940c8940c80bc402084020c010004c070c8c8c8cc0bc894cd4004400c884cd40c4008c010004008c0a4c05cdd619803180111000a4000604e602c6eb0cc014c0048800520025300733004330082001002480004c07d2401194552524f522d56455253494f4e2d43555252454e43592d303100221533500110022213023491194552524f522d56455253494f4e2d43555252454e43592d303100213026001150243233302175ca040002660066a600c660066600e4002002900011000a401042a66a002202e4426a00444a66a0062666ae68cdc4800a400003603844203a202c202e202c2a66aa66a6602a014016202e202c264a66aa66a600a6052602a6eb0cc010d4c01ccc010c00488005200022001480104060405c54cd54cd4c94cd4c8cc0288004004d55cf0008a812910a99a8008a999ab9a3370e90011aab9d0031302800215027221502937546600860024400290011080c880b880c080b880ba9803007880b080b1aab9e001375401aa004604e44a66a002202a4426464a66aa666ae68cdd799801180091000a4000a66a64a66a602e6aae78004540988c8854cd400454ccd5cd19b8748008d55ce802098011816980d1bac33006301a35573c6ea8cc018c068d55cf1baa01548001200015029221502b302f225335001150292215333573466ebccc020c070d55cf1baa002480000144c0b00084c010004dd5198011a980400891000a4004426466008646601840020026aae78dd5000a4000660066a60120024400290010b080c8999ab9a3371266601464666046eb94088004cc008c00488005200200b48810e56657273696f6e206f7261636c6500480000640604c01800c40614c01c00d40144c8894ccd5cd19b88001480004c0712410350543600133003001002302622253350011301c49103505437002215333573466e1d200000410021330053370200890010009191980f1aab9d0013233004200100135573c0026ea80048c88c008004c09488cccd55cf8009013919a81318021aba100230033574400493111191981391299a8008a40004426a00444a666ae68cdc78010048980380089803001802181311299a8008a40004426a00444a666ae68cdc78010038800898030019bad0053300e375a6ae84004dd71aba1357440026eb0010dd7002080989808249035054350030172233335573e0024032466a0306ae84008c00cd5d100124c44666ae68cdc38010008020018910010910009111111999999aba40062323300735573a0026aae78004dd5003918029bab00723004375800e460066eb401c8c008dd70038079111999aab9f0032003233002357420086ae8801002c8848cc00400c008c040894cd40044044884cd4048c8c8c94ccd5cd19b87480000084cc8848cc00400c008c8c8c94ccd5cd19b87480000084cc8848cc00400c008c8c8c94ccd5cd19b87480000084dd71aba1001130104901035054310035573c0046aae74004dd51aba1001375a6ae84d5d100089806a481035054310035573c0046aae74004dd51aba10013232325333573466e1d200000213232333322221233330010050040030023232325333573466e1d2000002133221233001003002301035742002660224646464a666ae68cdc3a4000004264244600400660286ae8400454ccd5cd19b87480080084c8ccc888488ccc00401401000cdd69aba1002375a6ae84004dd69aba1357440026ae880044c0592401035054310035573c0046aae74004dd50009aba135744002260249201035054310035573c0046aae74004dd51aba100333301175ca0206ae84008c8c8c94ccd5cd19b87480000084488800c54ccd5cd19b87480080084c84888c004010dd71aba100115333573466e1d20040021321222300200435742002260249201035054310035573c0046aae74004dd51aba10013300e75c6ae84d5d10009aba2001357440022601a9201035054310035573c0046aae74004dd51aba13574400226014921035054310035573c0046aae74004dd5001180200091919192999ab9a3370e900000109909118010019bae357420022a666ae68cdc3a400400426424460020066eb8d5d080089803249035054310035573c0046aae74004dd5000911919192999ab9a3370e90010010a8058a999ab9a3370e90000010980618029aba1001130064901035054310035573c0046aae74004dd5000919319ab9c00100413300175ceb488c88c008dd58009806911999aab9f001200f23233500f33008300635573a002600a6aae78004c010d5d10019aba100200512001221233001003002212230020031122001300622533500110072213350080023004001300522533500110062213350070023004001300422533500110052213350060023004001300322533500110042213350050023004001122002122122330010040032323001001223300330020020014c12bd8799fd8799f5820f8fbe7316561e57de9ecd1c86ee8f8b512a314ba86499ba9a584bfa8fe2edc8dff00ff000105a1820001821820821936b01a0030c8acf5f6").unwrap()
}

pub(crate) fn test_witness_cbor() -> Vec<u8> {
	hex::decode("82008258209ece7413050c15e677b9cf066d0e1efe083036b4f3b3f636947b6b2b7d9411e8584070723379222c44d1ab7a0c2c736ef4b4ded12d4f5ae7c8521280082bd489208b2f34595fc2a2e8e7784e8faf721bd200b353fa9a31a832a102433bbae40a100b").unwrap()
}

/// Creates a CardanoPaymentSigningKey from the example private key for testing
pub fn test_payment_key() -> CardanoPaymentSigningKey {
	CardanoPaymentSigningKey::from_normal_bytes(hex!(
		"fba31e47768f0e9c398a17fb9edd7b503e7d6a4aca9518f506bc7effae5916a1"
	))
	.expect("Valid private key")
}

pub fn test_payment_key2() -> CardanoPaymentSigningKey {
	CardanoPaymentSigningKey::from_normal_bytes(hex!(
		"cf86dc85e4933424826e846c18d2695689bf65de1fc0c40fcd9389ba1cbdc069"
	))
	.expect("Valid private key")
}

pub(crate) const PAYMENT_ADDR: &str =
	"addr_test1vqezxrh24ts0775hulcg3ejcwj7hns8792vnn8met6z9gwsxt87zy";

pub(crate) fn payment_addr() -> Address {
	Address::from_bech32(PAYMENT_ADDR).unwrap()
}

pub(crate) fn stake_pool_pub_key() -> StakePoolPublicKey {
	StakePoolPublicKey(hex!("bfbee74ab533f40979101057f96de62e95233f2a5216eb16b54106f09fd7350d"))
}

pub(crate) fn test_validator() -> PlutusScript {
	PlutusScript {
		bytes: hex!("4d4c01000022223212001375a009").to_vec(),
		language: Language::new_plutus_v2(),
	}
}

pub(crate) fn test_policy() -> PlutusScript {
	PlutusScript {
		bytes: hex!("49480100002221200101").to_vec(),
		language: Language::new_plutus_v2(),
	}
}

pub(crate) fn test_governance_policy() -> GovernancePolicyScript {
	GovernancePolicyScript::MultiSig(PartnerChainsMultisigPolicy {
		script: test_governance_script(),
		key_hashes: vec![],
		threshold: 0,
	})
}

pub(crate) fn test_governance_script() -> PlutusScript {
	PlutusScript { bytes: hex!("112233").to_vec(), language: Language::new_plutus_v2() }
}

pub(crate) fn test_plutus_data() -> PlutusData {
	PlutusData::new_bytes(vec![1, 2, 3, 4])
}

pub(crate) fn protocol_parameters() -> ProtocolParametersResponse {
	ProtocolParametersResponse {
		min_fee_coefficient: 44,
		min_fee_constant: OgmiosValue::new_lovelace(155381),
		stake_pool_deposit: OgmiosValue::new_lovelace(500000000),
		stake_credential_deposit: OgmiosValue::new_lovelace(2000000),
		max_value_size: OgmiosBytesSize { bytes: 5000 },
		max_transaction_size: OgmiosBytesSize { bytes: 16384 },
		min_utxo_deposit_coefficient: 4310,
		script_execution_prices: ScriptExecutionPrices {
			memory: fraction::Ratio::new_raw(577, 10000),
			cpu: fraction::Ratio::new_raw(721, 10000000),
		},
		plutus_cost_models: PlutusCostModels {
			plutus_v1: vec![898148, 53384111, 14333],
			plutus_v2: vec![43053543, 10],
			plutus_v3: vec![-900, 166917843],
		},
		max_collateral_inputs: 3,
		collateral_percentage: 150,
		min_fee_reference_scripts: ReferenceScriptsCosts { base: 15.0 },
	}
}

pub(crate) fn make_utxo(id_byte: u8, index: u16, lovelace: u64, addr: &Address) -> OgmiosUtxo {
	OgmiosUtxo {
		transaction: OgmiosTx { id: [id_byte; 32] },
		index,
		value: OgmiosValue::new_lovelace(lovelace),
		address: addr.to_bech32(None).unwrap(),
		..Default::default()
	}
}

pub(crate) fn ogmios_native_1_of_1_script() -> OgmiosScript {
	OgmiosScript {
		language: "native".into(),
		cbor: hex!("830301818200581ce8c300330fe315531ca89d4a2e7d0c80211bc70b473b1ed4979dff2b")
			.to_vec(),
		json: Some(NativeScript::Some {
			from: vec![NativeScript::Signature {
				from: hex!("e8c300330fe315531ca89d4a2e7d0c80211bc70b473b1ed4979dff2b"),
			}],
			at_least: 1,
		}),
	}
}

pub(crate) fn ogmios_plutus_script() -> OgmiosScript {
	OgmiosScript {
		language: "plutus:v2".into(),
		cbor: raw_scripts::MULTI_SIG_POLICY.0.to_vec(),
		json: None,
	}
}
