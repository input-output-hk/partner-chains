searchState.loadedDescShard("pallet_block_rewards", 0, "The <code>pallet</code> module in each FRAME pallet hosts the most …\nType of accumulated “reward” value It doesn’t need …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBeneficiary of the current block\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccumulated rewards of all beneficiaries since last payout\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant …\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nBeneficiary of the current block\nAccumulated rewards of all beneficiaries since last payout\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")