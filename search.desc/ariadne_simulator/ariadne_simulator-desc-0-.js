searchState.loadedDescShard("ariadne_simulator", 0, "Executable crate for simulating committee selection with …\nSimulates Ariadne selection and prints various statistics …\nSimulates Ariadne selection and prints selected committees …\nTop level command of the executable. Subcommands are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns Ariadne selection and calculates various statistics …\nAriadne algorithm version\nExecutes the command using givern RNG\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines whether to output to standard output instead of …\nFile containing permissioned candidates, defaults to no …\nNumber of permissioned seats\nFile containing registered candidates, defaults to no …\nNumber of registered candidates to be sampled from the …\nNumber of registered seats\nNumber of committees to select. Each committee will have a …\nDirectory in which to save the output CSV file\nRuns Ariadne selection and prints the selected committee …\nAriadne algorithm version\nExecutes the command using givern RNG\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFile containing permissioned candidates, defaults to no …\nNumber of permissioned seats\nFile containing registered candidates, defaults to no …\nNumber of registered seats\nNumber of committees to select. Each committee will be a …")