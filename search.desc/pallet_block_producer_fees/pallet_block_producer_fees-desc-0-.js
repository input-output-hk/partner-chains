searchState.loadedDescShard("pallet_block_producer_fees", 0, "Pallet to store Block Producer Fees settings that are …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nWeights for runtime calls, output of benchmarking\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nStores bounded amount of fee changes per\nMaximum number of past changes per one block producer kept …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nCurrent version of the pallet\nThe <code>Pallet</code> struct, the main type that implements traits …\nWeight information on extrinsic in the pallet. For …\nThe slot number of the current block.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieves block producers fees settings.\nRetrieves all stored block producer fees settings.\nRetrieves the latest fee settings for all accounts.\nGets the latest fee setting for the given account.\nReturns the current pallet version.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>set_fee</code>.\nSets the margin fee of a caller. Margin fee is (fee …\nSets the margin fee of a caller. Margin fee is (fee …\nAuto-generated docs-only module listing all (public and …\nSets the margin fee of a caller. Margin fee is (fee …\nStores bounded amount of fee changes per\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeight functions needed for the pallet.\nWeight of set_fee")