name: "Build and Publish to ECR"
description: "Builds the partner-chains-node Docker image and pushes it to ECR."
inputs:
  sha:
    description: "Commit SHA"
    required: true
  tag:
    description: "Release Tag"
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Download partner-chains-node-linux-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-node-linux-artifact

    - name: Write Dockerfile
      run: |
        cat > Dockerfile <<EOF
        FROM debian:bookworm-slim
        RUN apt-get update && apt-get install -y \\
            ca-certificates \\
            libgcc-s1 \\
            libstdc++6 \\
            libc6 \\
            libssl3 \\
            zlib1g \\
            libgomp1 \\
            && rm -rf /var/lib/apt/lists/*
        RUN useradd -m -u 1000 -U -s /bin/sh -d /substrate substrate \\
            && mkdir -p /data /substrate/.local/share/partner-chains-node \\
            && chown -R substrate:substrate /data /substrate \\
            && ln -s /data /substrate/.local/share/partner-chains-node
        COPY ./partner-chains-node-${{ inputs.tag }}-x86_64-linux /usr/local/bin/partner-chains-node
        RUN chown substrate:substrate /usr/local/bin/partner-chains-node \\
            && chmod +x /usr/local/bin/partner-chains-node
        USER substrate
        EXPOSE 30333 9615 9933 9944
        VOLUME ["/data"]
        ENTRYPOINT ["/usr/local/bin/partner-chains-node"]
        EOF
      shell: bash

    - name: Build Docker Image
      run: |
        docker build -t substrate-node:${{ inputs.sha }} .
      shell: bash

    - name: Acquire AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN_SECRET }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ECR_REGISTRY_SECRET }}

    - name: Push to ECR
      run: |
        docker tag substrate-node:${{ inputs.sha }} ${{ env.ECR_REGISTRY_SECRET }}/substrate-node:${{ inputs.sha }}
        docker push ${{ env.ECR_REGISTRY_SECRET }}/substrate-node:${{ inputs.sha }}
      shell: bash