name: "Build and Publish to GHCR"
description: "Builds the Docker image using Earthly and pushes it to GHCR."
inputs:
  sha:
    description: "Commit SHA to build from"
    required: true
  tag:
    description: "Tag for GHCR image"
    required: true
  ssh_key_earthly:
    description: "SSH key for Earthly"
    required: true
  config_tar:
    description: "Tarball containing earthly certs and configuration"
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.sha }}

    - name: Setup earthly
      uses: earthly/actions-setup@v1
      with:
        github-token: ${{ github.token }}
        use-cache: false
        version: ^0.8.0

    - name: Configure Secrets
      shell: bash
      env:
        EARTHLY_TAR: ${{ inputs.config_tar }}
      run: |
        if [[ "${{ inputs.config_tar }}" != "" ]]; then
          mkdir -p ~/.earthly
          printf "%s" "$EARTHLY_TAR" | base64 -d | tar -C ~/.earthly --zstd -x
        fi
        if [[ "${{ inputs.ssh_key_earthly }}" != "" ]]; then
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null || true
          ssh-add - <<< "${{ inputs.ssh_key_earthly }}"
        fi

    - name: Build and Benchmark
      env:
        EARTHLY_CI: true
      run: |
        export EARTHLY_OUTPUT=true
        earthly -P +build --PROFILE=production --FEATURES=runtime-benchmarks
      shell: bash

    - name: Generate and Extract Weights
      continue-on-error: true
      run: |
        repository_name="${GITHUB_REPOSITORY##*/}"
        ls -la /home/runner/work/${repository_name}/${repository_name}
        docker pull ubuntu:22.04
        mkdir -p weights
        docker run -d --name weight_generation \
            --memory=4096m \
            --cpus=1 \
            -v /home/runner/work/${repository_name}/${repository_name}:/workspace \
            ubuntu:22.04 \
            /bin/bash -c "sleep infinity"
        docker exec weight_generation bash -c "\
            apt-get update && \
            apt-get install -y jq curl build-essential && \
            ls -la /workspace && \
            mkdir -p /workspace/target/production && \
            cp /workspace/sidechains-substrate-node /workspace/target/production/sidechains-substrate-node && \
            ls -la /workspace/target/production && \
            cd /workspace && \
            chmod +x scripts/run_all_pallet_overhead_and_machine_benchmarks.sh && \
            chmod +x scripts/run_storage_benchmarks.sh && \
            source .envrc || true && \
            ./scripts/run_all_pallet_overhead_and_machine_benchmarks.sh -b && \
            ./scripts/run_storage_benchmarks.sh -b || true"
        weight_files=$(docker exec weight_generation find /workspace/runtime/src/weights -name '*.rs')
        echo "$weight_files" | while read weight_file; do
            weight_file_name=$(basename "$weight_file")
            docker cp "weight_generation:$weight_file" "weights/${weight_file_name}"
        done
        docker stop weight_generation
        docker rm weight_generation
      shell: bash

    - name: Overwrite Weights in Runtime Directory
      continue-on-error: true
      run: |
        sudo chmod -R a+rwx ./runtime/src/weights
        for weight_file in weights/*.rs
        do
          cp "$weight_file" "./runtime/src/weights/$(basename "$weight_file")"
        done
      shell: bash

    - name: Main Build
      env:
        EARTHLY_CI: true
        EARTHLY_PUSH: false
        EARTHLY_OUTPUT: true
      run: earthly -P +docker --image="ghcr-image" --tags="latest" --PROFILE=production
      shell: bash

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        FORCE_COLOR: 1

    - name: Tag and Push Image to GHCR
      run: |
        repository_name="${GITHUB_REPOSITORY##*/}"
        target_image="ghcr.io/${{ github.repository }}/$repository_name-node"
        commit_sha="${{ inputs.sha }}"
        custom_tag="${{ inputs.tag }}"

        docker tag ghcr-image:latest $target_image:latest
        docker tag ghcr-image:latest $target_image:$commit_sha
        docker tag ghcr-image:latest $target_image:$custom_tag

        docker push $target_image:latest
        docker push $target_image:$commit_sha
        docker push $target_image:$custom_tag
      shell: bash