name: "Create Draft Release"
description: "Creates a draft release and uploads partner-chains artifacts to GitHub."
inputs:
  tag:
    description: "Tag for the release"
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Set filename variables
      id: set-filenames
      run: |
        echo "PARTNER_CHAINS_CLI_X86_64_LINUX=partner-chains-cli-${{ inputs.tag }}-x86_64-linux" >> $GITHUB_ENV
        echo "PARTNER_CHAINS_NODE_X86_64_LINUX=partner-chains-node-${{ inputs.tag }}-x86_64-linux" >> $GITHUB_ENV
        echo "PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN=partner-chains-cli-${{ inputs.tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
        echo "PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN=partner-chains-node-${{ inputs.tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
        echo "PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN=partner-chains-cli-${{ inputs.tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
        echo "PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN=partner-chains-node-${{ inputs.tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
      shell: bash

    - name: Download partner-chains-cli-linux-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-cli-linux-artifact
        path: artifact-linux/

    - name: Download partner-chains-node-linux-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-node-linux-artifact
        path: artifact-linux/

    - name: Download partner-chains-cli-macos-x86_64-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-cli-macos-x86_64-artifact
        path: artifact-macos-x86_64/

    - name: Download partner-chains-node-macos-x86_64-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-node-macos-x86_64-artifact
        path: artifact-macos-x86_64/

    - name: Download partner-chains-cli-macos-arm64-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-cli-macos-arm64-artifact
        path: artifact-macos-arm64/

    - name: Download partner-chains-node-macos-arm64-artifact
      uses: actions/download-artifact@v4
      with:
        name: partner-chains-node-macos-arm64-artifact
        path: artifact-macos-arm64/

    - name: Check if release already exists
      id: check_release
      run: |
        tag="${{ inputs.tag }}"
        release_response=$(curl -s -H "Authorization: token ${{ env.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")

        if echo "$release_response" | grep -q '"message": "Not Found"'; then
          echo "release_exists=false" >> $GITHUB_ENV
          echo "::set-output name=release_exists::false"
        else
          echo "release_exists=true" >> $GITHUB_ENV
          echo "::set-output name=release_exists::true"
          echo "release_id=$(echo $release_response | jq -r .id)" >> $GITHUB_ENV
          echo "::set-output name=release_id::$(echo $release_response | jq -r .id)"
        fi
      shell: bash

    - name: Create draft release
      id: create_release
      if: ${{ steps.check_release.outputs.release_exists == 'false' }}
      run: |
        tag="${{ inputs.tag }}"
        release_body="### Pre-release candidate for version $tag\n\n"
        release_body+="This is a draft pre-release candidate for release $tag that is undergoing testing. The current testing status is:\n\n"
        release_body+="- [x] Local environment\n"
        release_body+="- [ ] Staging preview environment\n"
        release_body+="- [ ] Staging preprod environment\n\n"
        release_body+="Please note: this release is not yet fully verified and is pending further testing.\n"

        release_response=$(curl -s -X POST -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
                          -d '{"tag_name": "'$tag'", "name": "'$tag'", "body": "'"$release_body"'", "draft": true, "generate_release_notes": true, "prerelease": true}' \
                          "https://api.github.com/repos/${{ github.repository }}/releases")
        echo "release_id=$(echo $release_response | jq -r .id)" >> $GITHUB_ENV
        echo "::set-output name=release_id::$(echo $release_response | jq -r .id)"
      shell: bash

    - name: Upload artifacts to release
      if: ${{ steps.check_release.outputs.release_exists == 'true' || steps.create_release.outputs.release_id != '' }}
      run: |
        release_id="${{ steps.create_release.outputs.release_id }}"
        if [ -z "$release_id" ]; then
          release_id="${{ steps.check_release.outputs.release_id }}"
        fi

        for artifact in "artifact-linux/${{ env.PARTNER_CHAINS_CLI_X86_64_LINUX }}" \
                        "artifact-linux/${{ env.PARTNER_CHAINS_NODE_X86_64_LINUX }}" \
                        "artifact-macos-x86_64/${{ env.PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN }}" \
                        "artifact-macos-x86_64/${{ env.PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN }}" \
                        "artifact-macos-arm64/${{ env.PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN }}" \
                        "artifact-macos-arm64/${{ env.PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN }}"; do
          chmod +x "$artifact"
          curl -s -X POST \
            -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$artifact" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$(basename $artifact)"
        done
      shell: bash
