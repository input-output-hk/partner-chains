name: "Deploy Rust Docs"
description: "Installs necessary tooling, generates Rust documentation, and deploys it to GitHub Pages."
inputs:
  ssh_key:
    description: "SSH key to read Substrate Repo"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Add SSH key to read Substrate Repo
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        ssh-add - <<< "${{ inputs.ssh_key }}"
      shell: bash

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Print working directory and list files
      run: |
        pwd
        ls -alh
      shell: bash
    
    - name: Show rust-toolchain.toml
      run: |
        echo "====== rust-toolchain.toml ======"
        cat rust-toolchain.toml
        echo "================================="
      shell: bash
    
    - name: Show Rust version used in Nix dev shell
      run: |
        nix develop .#nightly -c rustc --version
        nix develop .#nightly -c cargo --version
      shell: bash
    
    - name: Show required fenix hash for rust-toolchain.toml
      run: |
        nix run github:nix-community/fenix -- from-toolchain-file --print-hash rust-toolchain.toml || true
      shell: bash

    - name: Prove which rustc/cargo is actually running in shell
      run: |
        which cargo
        which rustc
        cargo --version
        rustc --version
        env | grep -i rust
      shell: bash

    - name: Prove which cargo/rustc will run via gen-cargo-docs
      run: |
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh || true
        $(which gen-cargo-docs)
      shell: bash

    - name: Build Rustdocs
      run: nix develop .#nightly -c bash -c 'cargo --version && rustc --version && gen-cargo-docs'
      shell: bash

    - name: Deploy documentation
      if: ${{ github.ref_name == 'master' }}
      uses: peaceiris/actions-gh-pages@v3.9.3
      with:
        github_token: ${{ env.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./target/doc

