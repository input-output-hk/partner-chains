name: "Upload Chain Spec Artifacts to Kubernetes"
description: "Uploads chain spec artifacts to Kubernetes secrets for devnet, staging-preview, and staging-preprod environments."
inputs:
  sha:
    description: "Commit SHA to append to chain spec secret name"
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Install kubectl and awscli
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
  
        # Install or update AWS CLI v2
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -o awscliv2.zip
        sudo ./aws/install --update
      shell: bash

    - name: Configure kubectl
      env:
        KUBECONFIG_BASE64: ${{ env.kubeconfig_base64 }}
        K8S_SERVER: ${{ env.K8S_SERVER }}
        K8S_SA_TOKEN: ${{ env.K8S_SA_TOKEN }}
      run: |
        echo "${KUBECONFIG_BASE64}" | base64 --decode > ${{ runner.temp }}/kubeconfig.yaml
        kubectl config set-cluster my-cluster --server=${K8S_SERVER} --insecure-skip-tls-verify=true
        kubectl config set-credentials github-actions --token=${K8S_SA_TOKEN}
        kubectl config set-context my-context --cluster=my-cluster --user=github-actions --namespace=default
        kubectl config use-context my-context
      shell: bash

    - name: Download chain spec artifacts
      uses: actions/download-artifact@v4
      with:
        name: chain-specs

    - name: Update Kubernetes secret for devnet chain spec
      run: |
        if [ -f ./devnet_chain_spec.json ]; then
          SECRET_NAME="devnet-chain-spec-${{ inputs.sha }}"
          kubectl delete secret "$SECRET_NAME" --namespace=sc --ignore-not-found
          kubectl create secret generic "$SECRET_NAME" \
            --from-file=devnet_chain_spec.json=./devnet_chain_spec.json \
            --namespace=sc
        fi
      shell: bash

    - name: Update Kubernetes secret for ci-preview chain spec
      run: |
        if [ -f ./ci_preview_chain_spec.json ]; then
          SECRET_NAME="ci-preview-chain-spec-${{ inputs.sha }}"
          kubectl delete secret "$SECRET_NAME" --namespace=ci-preview --ignore-not-found
          kubectl create secret generic "$SECRET_NAME" \
            --from-file=ci_preview_chain_spec.json=./ci_preview_chain_spec.json \
            --namespace=ci-preview
        fi
      shell: bash
    
    - name: Update Kubernetes secret for staging-preview chain spec
      run: |
        if [ -f ./staging_preview_chain_spec.json ]; then
          SECRET_NAME="staging-preview-chain-spec-${{ inputs.sha }}"
          kubectl delete secret "$SECRET_NAME" --namespace=staging-preview --ignore-not-found
          kubectl create secret generic "$SECRET_NAME" \
            --from-file=staging_preview_chain_spec.json=./staging_preview_chain_spec.json \
            --namespace=staging-preview
        fi
      shell: bash
    
    - name: Update Kubernetes secret for staging-preprod chain spec
      run: |
        if [ -f ./staging_preprod_chain_spec.json ]; then
          SECRET_NAME="staging-preprod-chain-spec-${{ inputs.sha }}"
          kubectl delete secret "$SECRET_NAME" --namespace=staging-preprod --ignore-not-found
          kubectl create secret generic "$SECRET_NAME" \
            --from-file=staging_preprod_chain_spec.json=./staging_preprod_chain_spec.json \
            --namespace=staging-preprod
        fi
      shell: bash