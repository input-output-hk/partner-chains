name: 'Wait for epoch'
description: 'Wait for epoch in specified environment'

inputs:
  epoch:
    description: 'Expected epoch'
    required: true
  deployment:
    description: 'Deployment type (docker or kubernetes)'
    required: true
  node:
    description: 'Node name'
    required: true
  environment:
    description: 'Environment (optional for kubernetes)'
    required: false

runs:
  using: "composite"
  steps:
    - name: Wait for epoch
      shell: bash
      run: |
        if [ "${{ inputs.deployment }}" == "docker" ]; then
          epoch=$(docker exec ${{ inputs.node }} cardano-cli query tip --testnet-magic 42 | jq -r .epoch)
          while [ $epoch -lt ${{ inputs.epoch }} ]; do
            echo "Epoch: $epoch"
            sleep 10
            epoch=$(docker exec ${{ inputs.node }} cardano-cli query tip --testnet-magic 42 | jq -r .epoch)
          done
          echo "Epoch: $epoch"

        elif [ "${{ inputs.deployment }}" == "kubernetes" ]; then
          if [ "${{ inputs.environment }}" == "staging-preview" ]; then
            testnet_magic=1 
          elif [ "${{ inputs.environment }}" == "staging-preprod" ]; then
            testnet_magic=2 
          else
            echo "Invalid environment for Kubernetes deployment"
            exit 1
          fi

          epoch=$(kubectl exec ${{ inputs.node }} -c cardano-node -n ${{ inputs.environment }} -- cardano-cli query tip --testnet-magic $testnet_magic | jq -r .epoch)
          while [ $epoch -lt ${{ inputs.epoch }} ]; do
            echo "Epoch: $epoch"
            sleep 10
            epoch=$(kubectl exec ${{ inputs.node }} -c cardano-node -n ${{ inputs.environment }} -- cardano-cli query tip --testnet-magic $testnet_magic | jq -r .epoch)
          done
          echo "Epoch: $epoch"

        else
          echo "Invalid deployment type"
          exit 1
        fi