name: "Copy to binary-host"
description: "Copied binary to binary-host"
inputs:
  sha:
    description: "Git SHA"
    required: true
  env:
    description: "ci-preview or staging (used to determine the binary-host /tools subdirectory)"
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Acquire AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN_SECRET }}
        aws-region: eu-central-1

    - name: Install kubectl, kubernetes-helm, and awscli
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        sudo apt-get install apt-transport-https --yes
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update
        sudo apt-get install helm
      shell: bash

    - name: Configure kubectl
      run: |
        echo "${{ env.kubeconfig_base64 }}" | base64 --decode > ${{ runner.temp }}/kubeconfig.yaml
        kubectl config set-cluster my-cluster --server=${{ env.K8S_SERVER }} --insecure-skip-tls-verify=true
        kubectl config set-credentials github-actions --token=${{ env.K8S_SA_TOKEN }}
        kubectl config set-context my-context --cluster=my-cluster --user=github-actions --namespace=default
        kubectl config use-context my-context
      shell: bash

    - name: Create Subdirs (if they don't exist)
      run: |
        kubectl exec -n sc binary-host -c binary-host -- mkdir -p /tools/${{ inputs.env }}
      shell: bash

    - name: Delete old partner-chains-node binaries
      run: |
        kubectl exec -it binary-host -c binary-host -n sc -- find /tools/${{ inputs.env }} -name "partner-chains-node-*" -type f -mtime +30 -delete
      shell: bash

    - name: Copy binary to binary-host
      continue-on-error: true
      run: |
        cp partner-chains-node-binary partner-chains-node-latest
        cp partner-chains-node-binary partner-chains-node-${{ inputs.sha }} 
        kubectl cp partner-chains-node-latest sc/binary-host:/tools/${{ inputs.env }} -c binary-host
        kubectl cp partner-chains-node-${{ inputs.sha }} sc/binary-host:/tools/${{ inputs.env }} -c binary-host
      shell: bash
    
